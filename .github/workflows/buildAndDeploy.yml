name: Cass Config Builder Build & Deploy
on:
  push:
    branches: [ master, multiarch-pr ]
  pull_request:
    branches: [ master, multiarch-pr ]
jobs:
  build_operator_docker:
    name: Build Cass Config Builder Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
      - uses: actions/checkout@v2
        if: github.event_name != 'pull_request'
        with:
          submodules: true
      - name: Login to GitHub Package Registry
        run: echo "${{ secrets.JOHN_GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin
      - name: Setup Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          version: latest
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build docker image
        run: |
          GITHUB_REPO_URL="https://github.com/${{ github.repository }}"
          REPOSITORY_URL="docker.pkg.github.com/${{ github.repository_owner }}/cass-config-builder/cass-config-builder"
          VERSION_NUMBER="$(cat version.txt | tr -d '[:space:]')"
          VERSION_DATE="$(date -u +%Y%m%d)"
          RELEASE_VERSION="${VERSION_NUMBER}-${VERSION_DATE}"

          # GitHub packages does not presently support multiarch images, so we
          # will have to create independent tags for each arch
          TAG_ARM64="${RELEASE_VERSION}-arm64"
          docker buildx build --load \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --tag "${REPOSITORY_URL}:${TAG_ARM64}" \
            --label "org.label-schema.schema-version=1.0" \
            --label "org.label-schema.vcs-ref=$GITHUB_SHA" \
            --label "org.label-schema.vcs-url=$GITHUB_REPO_URL" \
            --label "org.label-schema.version=$RELEASE_VERSION" \
            --file docker/debian.Dockerfile \
            --target cass-config-builder \
            --platform linux/arm64 .

          docker push "${REPOSITORY_URL}:${TAG_ARM64}"

          TAG_AMD64="$RELEASE_VERSION"
          docker buildx build --load \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --tag "${REPOSITORY_URL}:${TAG_AMD64}" \
            --label "org.label-schema.schema-version=1.0" \
            --label "org.label-schema.vcs-ref=$GITHUB_SHA" \
            --label "org.label-schema.vcs-url=$GITHUB_REPO_URL" \
            --label "org.label-schema.version=$RELEASE_VERSION" \
            --file docker/debian.Dockerfile \
            --target cass-config-builder \
            --platform linux/amd64 .

          docker push "${REPOSITORY_URL}:${TAG_AMD64}"
